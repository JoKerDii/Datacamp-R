as.factor(albumin)+STENOSIS+IMT,
data = SMARTc,x = T, y = T) # x=T, y=T,surv=T
dd <- datadist(SMARTc)
options(datadist="dd")
anova(cox01def)
summary(cox01def)
#C-statistic and KM-curves of cox01def
#C-statistic:
rcorr.cens(-cox01def$linear.pred,cox01def$y)
cox01def$linear.pred
cox01def$linear.pred
summary(cox01def$linear.predictor)
summary(cox01def$linear.predictor)
SMARTc$lp4	<- cut2(as.numeric(cox01def$linear.predictor), g=4)
dd <- datadist(SMARTc)
options(datadist="dd")
table(SMARTc$lp4)
levels(SMARTc$lp4) <- as.character(1:4)
KMrisk4	<- cph(Surv(TEVENT,EVENT) ~ lp4, data=SMARTc, x = T, y = T, surv = T)
KMrisk4
survplot(KMrisk4, n.risk=T, xlab="Follow-up (days)", cex.n.risk=1,ylab="Fraction free of cardiovascular event", time.inc=365)
#Bootstrap:
val.step  <- validate(cox01, bw=T, rule="aic", type="individual")
knitr::opts_chunk$set(echo = TRUE)
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(ggplot2)
library(dplyr)
data(MedGPA)
# create a scatterplot for acceptance as a function of GPA (y as a function of x)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# filter
MedGPA_middle <- MedGPA %>%
filter(GPA >= 3.375, GPA <= 3.770)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA_middle, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# fit model
glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
library(openintro)
data("heartTr")
heartTr <- heartTr %>%
mutate(is_alive = ifelse(survived == "dead", 0,1)) %>%
mutate(is_alive = as.factor(is_alive))
data_space <- ggplot(data = heartTr, aes(x = age, y = is_alive)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
data_space
data_space +
geom_smooth(method = "lm", se = FALSE)
glm(is_alive ~ age, data = heartTr, family = binomial)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# add logistic curve
data_space +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial"))
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted)
library(broom)
library(broom)
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted)
heartTr_plus
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
gpa_bins <- quantile(MedGPA$GPA, probs = seq(0, 1, 1/6))
gpa_bins
MedGPA$bins <- cut(MedGPA$GPA, breaks = gpa_bins, include.lowest = TRUE)
head(MedGPA)
MedGPA$bins
head(MedGPA)
MedGPA_binned <- MedGPA %>%
group_by(bins) %>%
summarize(mean_GPA = mean(GPA), acceptance_rate = mean(Acceptance))
MedGPA_binned
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() +
geom_line() +
theme_bw()
data_space
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
MedGPA_plus
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
MedGPA_plus
colnames(MedGPA_plus)
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
MedGPA_plus
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
library(broom)
library(broom)
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
# compute odds for bins
MedGPA_binned <- MedGPA_binned %>%
mutate(odds = acceptance_rate / (1 - acceptance_rate))
# plot binned odds
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = odds)) +
geom_point() + geom_line()
# compute odds for observations
MedGPA_plus <- MedGPA_plus %>%
mutate(odds_hat = .fitted / (1 - .fitted))
# logistic model on odds scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = odds_hat), color = "red")
gpa_bins <- quantile(MedGPA$GPA, probs = seq(0, 1, 1/6))
gpa_bins
MedGPA$bins <- cut(MedGPA$GPA, breaks = gpa_bins, include.lowest = TRUE)
head(MedGPA)
MedGPA_binned <- MedGPA %>%
group_by(bins) %>%
summarize(mean_GPA = mean(GPA), acceptance_rate = mean(Acceptance))
MedGPA_binned
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
library(broom)
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
# compute odds for bins
MedGPA_binned <- MedGPA_binned %>%
mutate(odds = acceptance_rate / (1 - acceptance_rate))
# plot binned odds
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = odds)) +
geom_point() + geom_line()
# compute odds for observations
MedGPA_plus <- MedGPA_plus %>%
mutate(odds_hat = .fitted / (1 - .fitted))
# logistic model on odds scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = odds_hat), color = "red")
heartTr_plus <- heartTr_plus %>%
mutate(odds_hat = y_hat / (1 - y_hat))
ggplot(heartTr_plus, aes(x = age, y = odds_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Odds of being alive")
mod <- glm(is_alive ~ age, data = heartTr)
mod <- glm(as.factor(is_alive) ~ age, data = heartTr)
heartTr
heartTr <- heartTr %>%
mutate(is_alive = ifelse(survived == "dead", 0,1)) %>%
mutate(is_alive = as.factor(is_alive)) %>%
na.omit()
mod <- glm(as.factor(is_alive) ~ age, data = heartTr)
heartTr
mod <- glm(as.factor(is_alive) ~ age, data = heartTr)
str(heartTr$is_alive)
glm(is_alive ~ age, data = heartTr, family = binomial)
library(broom)
mod <- glm(is_alive ~ age, data = heartTr, family = binomial)
mod
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
heartTr_plus <- heartTr_plus %>%
mutate(odds_hat = y_hat / (1 - y_hat))
ggplot(heartTr_plus, aes(x = age, y = y_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Probability of being alive", limits = c(0, 1))
heartTr_plus <- heartTr_plus %>%
mutate(odds_hat = y_hat / (1 - y_hat))
ggplot(heartTr_plus, aes(x = age, y = odds_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Odds of being alive")
heartTr_plus <- heartTr_plus %>%
mutate(log_odds_hat = log(odds_hat))
heartTr_plus
ggplot(heartTr_plus, aes(x = age, y = log_odds_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Log(odds) of being alive")
# compute log odds for bins
MedGPA_binned <- MedGPA_binned %>%
mutate(log_odds = log(acceptance_rate / (1 - acceptance_rate)))
# plot binned log odds
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = log_odds)) +
geom_point() + geom_line()
# compute log odds for observations
MedGPA_plus <- MedGPA_plus %>%
mutate(log_odds_hat = log(.fitted / (1 - .fitted)))
# logistic model on log odds scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = log_odds_hat), color = "red")
knitr::opts_chunk$set(echo = TRUE)
# create new data frame
new_data <- data.frame(GPA = 3.51)
# make predictions
augment(mod, newdata = new_data, type.predict = "response")
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(ggplot2)
library(dplyr)
data(MedGPA)
# create a scatterplot for acceptance as a function of GPA (y as a function of x)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# filter
MedGPA_middle <- MedGPA %>%
filter(GPA >= 3.375, GPA <= 3.770)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA_middle, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# fit model
glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
library(openintro)
data("heartTr")
heartTr <- heartTr %>%
mutate(is_alive = ifelse(survived == "dead", 0,1)) %>%
mutate(is_alive = as.factor(is_alive)) %>%
na.omit()
data_space <- ggplot(data = heartTr, aes(x = age, y = is_alive)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
data_space
data_space +
geom_smooth(method = "lm", se = FALSE)
mod <- glm(is_alive ~ age, data = heartTr, family = binomial)
mod
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# add logistic curve
data_space +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial"))
gpa_bins <- quantile(MedGPA$GPA, probs = seq(0, 1, 1/6))
gpa_bins
MedGPA$bins <- cut(MedGPA$GPA, breaks = gpa_bins, include.lowest = TRUE)
head(MedGPA)
MedGPA_binned <- MedGPA %>%
group_by(bins) %>%
summarize(mean_GPA = mean(GPA), acceptance_rate = mean(Acceptance))
MedGPA_binned
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
# data frame with binary predictions
tidy_mod <- augment(mod, type.predict = "response") %>%
mutate(Acceptance_hat = round(.fitted))
library(broom)
library(broom)
# create new data frame
new_data <- data.frame(GPA = 3.51)
# make predictions
augment(mod, newdata = new_data, type.predict = "response")
# data frame with binary predictions
tidy_mod <- augment(mod, type.predict = "response") %>%
mutate(Acceptance_hat = round(.fitted))
# confusion matrix
tidy_mod %>%
select(Acceptance, Acceptance_hat) %>%
table()
library(bromm)
library(broom)
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
mod <- glm(is_alive ~ age, data = heartTr, family = binomial)
mod
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
ggplot(heartTr_plus, aes(x = age, y = y_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Probability of being alive", limits = c(0, 1))
# data frame with binary predictions
tidy_mod <- augment(mod, type.predict = "response") %>%
mutate(Acceptance_hat = round(.fitted))
# confusion matrix
tidy_mod %>%
select(Acceptance, Acceptance_hat) %>%
table()
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# data frame with binary predictions
tidy_mod <- augment(mod, type.predict = "response") %>%
mutate(Acceptance_hat = round(.fitted))
# confusion matrix
tidy_mod %>%
select(Acceptance, Acceptance_hat) %>%
table()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
nyc <- read_csv("data/nyc.csv")
glimpse(nyc)
library(ggplot2)
# Price by Food plot
ggplot(aes(y = Price,x = Food), data = nyc) + geom_point()
# Price by Food model
lm(Price ~ Food, data = nyc)
library(dplyr)
nyc %>%
group_by(East) %>%
summarize(mean_price = mean(Price))
library(plotly)
# fit model
hmod <- lm(Price ~ Food + Service, data = nyc)
x <- seq(16, 25, length = 50)
y <- seq(14, 24, length = 50)
plane <- outer(x, y, function(a, b){-21.158582 + 1.495369*a + 1.704101*b})
# draw 3D scatterplot
p <- plot_ly(data = nyc, z = ~Price, x = ~Food, y = ~Service, opacity = 0.6) %>%
add_markers()
# draw a plane
p %>%
add_surface(x = ~x, y = ~y, z = ~plane, showscale = FALSE)
# Price by Food and Service and East
lm(Price ~ Food + Service + East, data = nyc)
plane0 <- outer(x, y, function(a, b){-20.8154761 + 1.4862725*a + 1.6646884*b + 0.9648814})
plane1 <- outer(x, y, function(a, b){-20.8154761 + 1.4862725*a + 1.6646884*b})
# draw 3D scatterplot
p <- plot_ly(data = nyc, z = ~Price, x = ~Food, y = ~Service, opacity = 0.6) %>%
add_markers(color = ~factor(East))
# draw two planes
p %>%
add_surface(x = ~x, y = ~y, z = ~plane0, showscale = FALSE) %>%
add_surface(x = ~x, y = ~y, z = ~plane1, showscale = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(ggplot2)
library(dplyr)
library(broom)
data(MedGPA)
# create a scatterplot for acceptance as a function of GPA (y as a function of x)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# filter
MedGPA_middle <- MedGPA %>%
filter(GPA >= 3.375, GPA <= 3.770)
# scatterplot with jitter
data_space <- ggplot(data = MedGPA_middle, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# linear regression line
data_space +
geom_smooth(method = "lm", se = FALSE)
# fit model
glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
library(openintro)
data("heartTr")
heartTr <- heartTr %>%
mutate(is_alive = ifelse(survived == "dead", 0,1)) %>%
mutate(is_alive = as.factor(is_alive)) %>%
na.omit()
data_space <- ggplot(data = heartTr, aes(x = age, y = is_alive)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
data_space
data_space +
geom_smooth(method = "lm", se = FALSE)
mod <- glm(is_alive ~ age, data = heartTr, family = binomial)
mod
# scatterplot with jitter
data_space <- ggplot(data = MedGPA, aes(y = Acceptance, x = GPA)) +
geom_jitter(width = 0, height = 0.05, alpha = 0.5)
# add logistic curve
data_space +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial"))
gpa_bins <- quantile(MedGPA$GPA, probs = seq(0, 1, 1/6))
gpa_bins
MedGPA$bins <- cut(MedGPA$GPA, breaks = gpa_bins, include.lowest = TRUE)
head(MedGPA)
MedGPA_binned <- MedGPA %>%
group_by(bins) %>%
summarize(mean_GPA = mean(GPA), acceptance_rate = mean(Acceptance))
MedGPA_binned
library(broom)
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# binned points and line
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = acceptance_rate)) +
geom_point() + geom_line()
# augmented model
MedGPA_plus <- mod %>%
augment(type.predict = "response")
# logistic model on probability scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = .fitted), color = "red")
mod <- glm(is_alive ~ age, data = heartTr, family = binomial)
mod
heartTr_plus <- mod %>%
augment(type.predict = "response") %>%
mutate(y_hat = .fitted);heartTr_plus
ggplot(heartTr_plus, aes(x = age, y = y_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Probability of being alive", limits = c(0, 1))
heartTr_plus <- heartTr_plus %>%
mutate(odds_hat = y_hat / (1 - y_hat))
ggplot(heartTr_plus, aes(x = age, y = odds_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Odds of being alive")
heartTr_plus <- heartTr_plus %>%
mutate(log_odds_hat = log(odds_hat))
ggplot(heartTr_plus, aes(x = age, y = log_odds_hat)) +
geom_point() + geom_line() +
scale_y_continuous("Log(odds) of being alive")
# compute odds for bins
MedGPA_binned <- MedGPA_binned %>%
mutate(odds = acceptance_rate / (1 - acceptance_rate))
# plot binned odds
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = odds)) +
geom_point() + geom_line()
# compute odds for observations
MedGPA_plus <- MedGPA_plus %>%
mutate(odds_hat = .fitted / (1 - .fitted))
# logistic model on odds scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = odds_hat), color = "red")
# compute log odds for bins
MedGPA_binned <- MedGPA_binned %>%
mutate(log_odds = log(acceptance_rate / (1 - acceptance_rate)))
# plot binned log odds
data_space <- ggplot(data = MedGPA_binned, aes(x = mean_GPA, y = log_odds)) +
geom_point() + geom_line()
# compute log odds for observations
MedGPA_plus <- MedGPA_plus %>%
mutate(log_odds_hat = log(.fitted / (1 - .fitted)))
# logistic model on log odds scale
data_space +
geom_line(data = MedGPA_plus, aes(x = GPA, y = log_odds_hat), color = "red")
# create new data frame
new_data <- data.frame(GPA = 3.51)
# make predictions
augment(mod, newdata = new_data, type.predict = "response")
# fit model
mod <- glm(Acceptance ~ GPA, data = MedGPA, family = binomial)
mod
# data frame with binary predictions
tidy_mod <- augment(mod, type.predict = "response") %>%
mutate(Acceptance_hat = round(.fitted))
# confusion matrix
tidy_mod %>%
select(Acceptance, Acceptance_hat) %>%
table()
